{
  "name": "Trainer",
  "tagline": "Java application which allows a user to keep track of any performed activity, storing all data in a SQL database.",
  "body": "# Trainer\r\nJava application which allows a user to keep track of any performed activity, storing all data in a SQL database. \r\nApplication performs statistical analysis and presents results in two graphs. \r\n\r\nApplication's UI with inserted data:\r\n\r\n![picture](https://sc-cdn.scaleengine.net/i/7028f4e81b971b84f91b346bac0971f01.png)\r\n\r\nThe application stores records of user's activity in a database. Activities are inserted via middle panel `Add new record`, which allows to type activity's name and custom number representing for example repetitions of performed exercise:\r\n\r\n![picture](https://sc-cdn.scaleengine.net/i/85f2dca44ab13e9445b93fa9c7ed78191.png)\r\n\r\n\r\nThe list of activities' names which have been already inserted in the database are stored in the list `Exercise names` at the left side of the window. \r\n\r\n![picture](https://sc-cdn.scaleengine.net/i/0898e07f7b5885e5b3a5fb4483cd5a4f2.png)\r\n\r\n\r\nAfter clicking on the name it loads to the middle panel of the application.\r\n\r\nHistory of user's activities is displayed on right side list, `Exercise History` which shows activity's name, included number as well as date and time of record's insertion in the database:\r\n\r\n![picture](https://sc-cdn.scaleengine.net/i/7fbf7e5a7227336b979f4c94f20cef8c1.png)\r\n\r\n\r\nThe application's statistical analysis of stored data is displayed as two diagrams, Pie Chart representing the percentage of different activities by numbers of reps included in those activities: \r\n\r\n![picture](https://sc-cdn.scaleengine.net/i/ecc2fac67223106d3af8cb451bb582a51.png)\r\n\r\nand a bar chart displaying activities in different colors, number of repetitions on Y scale and time of record's insertion on X scale.\r\n\r\n![picture](https://sc-cdn.scaleengine.net/i/a4608159ab270b3ff096bc753b59c851.png)\r\n\r\n---\r\n\r\nTo generate a jar file of this project using maven:\r\n  1. after cloning the project, open terminal in the project's main directory and type:\r\n\r\n  `mvn package`\r\n  \r\n  2. Next go to generated `target` directory:\r\n  \r\n  `cd target`\r\n  \r\n  3. To run generated jar file enter:\r\n  \r\n  `java -jar Trainer-jar-with-dependencies.jar`\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}